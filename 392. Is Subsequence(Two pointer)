//2 approach (2 pointer)
//using int indexOf(int ch, int fromIndex) function in java
c++------------------------------------------------------------>less memory and  o(n)
class Solution {
public:
    bool isSubsequence(string s, string t) {
        int i=0,j=0;
        for(j=0;i<s.length() && j<t.length();j++ ){
                     if(s[i]==t[j]){
                        i++;
                        
                     }

        }
        if(i==s.length()){
            return true;
        }
        else 
        return false;
    }
};

java------------------------------------------------------> more memory comparitively ,can also have worst case scenario of--O(m*n)
class Solution {
    public boolean isSubsequence(String s, String t) {
        int index=-1;
        for(char ch:s.toCharArray()){
                index=t.indexOf(ch,index+1);
                if(index==-1)
                return false;

        }

return true;
    }
    
}
